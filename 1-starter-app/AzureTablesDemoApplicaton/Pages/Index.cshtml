@page
@using AzureTablesDemoApplication.Models
@using AzureTablesDemoApplication.Utilities
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!-- Error Messages (if there is one) --> 
@if (TempData.ContainsKey("errors"))
{
    var errors = TempData.Get<IEnumerable<MessageModel>>("errors") as IEnumerable<MessageModel>;
    foreach (var error in errors)
    {
        <div class="alert @error.Level.ToCssClass() alert-dismissible fade show" role="alert">
            @error.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">            
            </button>
        </div>        
    }
}


<div class="row justify-content-evenly">
    <div class="col-auto">
        <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#insertUsingTableEntity">Insert using Table Entity</button>
    </div>     
    <div class="col-auto">
        <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#insertUsingExpandedData">Insert using Expandable Data</button>
    </div>    
    <div class="col-auto">
        <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#insertSampleData">Insert Sample Data</button>
    </div>
</div>

<hr />


<h3>Domain Data</h3>
<table class="table table-sm mb-1">
    <thead>
        <tr>
            <th>Host Name</th>
            <th>Domain Name</th>
            @foreach (var name in Model.FieldNames)
            {
                <th>@name</th>
            }
            <th class="text-end">Actions</th>
        </tr>
    </thead>

@foreach( dynamic item in Model.DomainObservations)
{

    <tr>
        <td>@item.HostName</td>
        <td>@item.DomainName</td>
        @foreach (var name in Model.FieldNames)
        {
            <td>@item[name]</td>
        }
        <td class="text-end">
            <button class="btn btn-primary btn-sm entity-update" data-table-entity="@FormatEntityAsJson(item)">Update</button>

            <form method="post" class="d-inline-block">
                <input type="hidden" name="hostname" value="@item.HostName" />
                <input type="hidden" name="domainName" value="@item.DomainName" />
                <button asp-page-handler="RemoveEntity" class="btn btn-danger btn-sm">Delete</button>
            </form>
        </td>
    </tr>
}
</table>



<!-- Insert with TableEntity Dialog -->
<div id="insertUsingTableEntity" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <form method="post">            
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Insert using TableEntity</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3 mb-2">
                      <div class="col-sm-4">
                        <label for="hostNameTableEntity" class="col-form-label">Host Name</label>
                      </div>
                      <div class="col-sm-8">
                        <input type="text" id="hostNameTableEntity" name="hostName" class="form-control" placeholder="Host name">
                      </div>
                    </div>

                    <div class="row g-3 mb-2">
                      <div class="col-sm-4">
                        <label for="domainNameTableEntity" class="col-form-label">Domain Name</label>
                      </div>
                      <div class="col-sm-4">
                        <input type="text" id="domainNameTableEntity" name="domainName" class="form-control">
                      </div>
                    </div>

					<div class="row g-3 mb-2">
						<div class="col-sm-4">
							<label for="isTestTableEntity" class="col-form-label">Is Test</label>
						</div>
						<div class="col-sm-8">
							<select id="isTestTableEntity" name="IsTest" class="form-control">
								<option>True</option>
								<option>False</option>
							</select>
						</div>
					</div>

                    <div class="row g-3 mb-2">
                      <div class="col-sm-4">
                        <label for="isProductionTableEntity" class="col-form-label">Is Production</label>
                      </div>
                      <div class="col-sm-8">
						  <select id="isProductionTableEntity" name="IsProduction" class="form-control">
						  	<option>True</option>
						  	<option>False</option>
						  </select>
                      </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" asp-page-handler="insertTableEntity">Insert</button>
                    <button type="submit" class="btn btn-primary" asp-page-handler="upsertTableEntity">Upsert</button>
                </div>
            </div>
        </form>
        <!-- </form> -->
    </div>
</div>

<!-- Bulk Insert Dialog -->
<div id="insertSampleData" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form method="post">            
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Insert sample data</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" asp-page-handler="insertSampleData">Insert</button>
                </div>
            </div>
        </form>
        <!-- </form> -->
    </div>
</div>

<!-- Update Entity Modal -->
<div class="modal fade" id="updateEntityModel" tabindex="-2" aria-labelledby="updateEntityLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
      <form method="post">
		  <div class="modal-content">
		  	<div class="modal-header">
		  		<h5 class="modal-title" id="updateEntityLabel">Update entity</h5>
		  		<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		  	</div>
		  	<div id="updateEntityDiv" class="modal-body">

		  	</div>
		  	<div class="modal-footer">
		  		<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
		  		<button id="updateEntityButton" type="submit" class="btn btn-primary" asp-page-handler="updateEntity">Update Entity</button>
		  	</div>
		  </div>
    </form>>
  </div>
</div>









@functions {
    public static string FormatEntityAsJson(DomainDataModel model)
    {
        var propertyNames = model.PropertyNames;
        var properties = propertyNames.Select(propertyName => new { PropertyName = propertyName, Value = model[propertyName] });

        var data = new { HostName = model.HostName, DomainName = model.DomainName, Etag = model.Etag, Properties = properties };

        return System.Text.Json.JsonSerializer.Serialize(data);
    }
}



@section Scripts
{
    <script src="~/lib/handlebars/handlebars-v4.7.7.js"></script>

    <!-- The handlebars.js template for the row the custom field will go into-->
    <script id="custom-field-template" type="text/x-handlebars-template">
        <div id="{{fieldName}}Div" class="row g-3">
          <div class="col-sm-4">
            <label for="{{fieldName}}Expandable" class="col-form-label">{{fieldText}}</label>
          </div>
          <div class="col-sm-7">
            <input type="text" id="{{fieldName}}Expandable" name="{{fieldName}}" class="form-control" placeholder="{{fieldText}} value">
          </div>
          <div class="col-sm-1 text-end">
              <button id="{{fieldName}}Remove" class="btn btn-danger">X</button>
          </div>
        </div>
    </script>


    <!-- The handlebars.js template for updating an entity-->
    <script id="entity-update-template" type="text/x-handlebars-template">      
        <div class="row g-3 mb-2">
          <div class="col-sm-4">
            <label for="PartitionKeyUpdate" class="col-form-label">Partition Key</label>
          </div>
          <div class="col-sm-8">
            <input type="text" id="PartitionKeyUpdate" name="hostName" class="form-control" value="{{HostName}}" readonly="readonly">
          </div>
        </div>
        <div class="row g-3 mb-2">
          <div class="col-sm-4">
            <label for="RowKeyUpdate" class="col-form-label">Row Key</label>
          </div>
          <div class="col-sm-8">
            <input type="text" id="RowKeyUpdate" name="domainName" class="form-control" value="{{DomainName}}" readonly="readonly">
          </div>
        </div>
        <input type="hidden" name="etag" value="{{Etag}}" />
        <hr />

        {{#each Properties}}
            <div class="row g-3 mb-2">
              <div class="col-sm-4">
                <label for="{{this.PropertyName}}Update" class="col-form-label">{{this.PropertyName}}</label>
              </div>
              <div class="col-sm-8">
                <input type="text" id="{{this.PropertyName}}Update" name="{{this.PropertyName}}" class="form-control" value="{{this.Value}}">
              </div>
            </div>
	    {{/each}}

    </script>


    <script>    
        $(document).ready(function() {
            var templateBase = $('#custom-field-template').html();
            var customFieldTemplate = Handlebars.compile(templateBase);

            $("#customFieldButton").on('click', function() {
                var text = $("#customFieldName").val();
                var fieldName = text.replace(/ /g, '');

                var data = { "fieldName": fieldName, "fieldText": text};
                var html = customFieldTemplate(data);
                
                $("#addCustomFieldDiv").before(html);
                
                $("#" + fieldName + "Remove").on('click', function() {
                    $("#" + fieldName + "Div").remove();
                });
            });
            

            // For Entity Updates
            var updateEntityModel = new bootstrap.Modal(document.getElementById('updateEntityModel'));
            var entityUpdateBase = $('#entity-update-template').html();
            var entityUpdateTemplate = Handlebars.compile(entityUpdateBase);

            $(".entity-update").on('click', function(event) {
                var entity = $(event.target).data("table-entity");

                var html = entityUpdateTemplate(entity);
                
                $("#updateEntityDiv").html(html);
                updateEntityModel.show();
            });

        });
    
    </script>
}
